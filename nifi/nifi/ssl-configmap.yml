apiVersion: v1
kind: ConfigMap
metadata:
  name: nifi-ssl-cm
data:
  security.sh: |
    #!/bin/bash
    set -ex -o allexport

    ORGANISATION_UNIT=${ORGANISATION_UNIT:-'CS'}
    ORGANISATION=${ORGANISATION:-'University of Waterloo'}
    PUBLIC_DNS=${POD_NAME:-'nifi.tld'}
    CITY=${CITY:-'Waterloo'}
    STATE=${STATE:-'Onatrio'}
    COUNTRY_CODE=${COUNTRY_CODE:-'CA'}
    KEY_PASS=${KEY_PASS:-$KEYSTORE_PASS}
    KEYSTORE_PASS=${KEYSTORE_PASS:-$NIFI_SENSITIVE_PROPS_KEY}
    KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD:-$NIFI_SENSITIVE_PROPS_KEY}
    KEYSTORE_PATH=/opt/nifi/nifi-current/keytool/keystore.p12
    KEYSTORE_TYPE=jks
    TRUSTSTORE_PASS=${TRUSTSTORE_PASS:-$NIFI_SENSITIVE_PROPS_KEY}
    TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD:-$NIFI_SENSITIVE_PROPS_KEY}
    TRUSTSTORE_PATH=/opt/nifi/nifi-current/keytool/truststore.jks
    TRUSTSTORE_TYPE=jks

    if [[ ! -f "/opt/nifi/nifi-current/keytool/keystore.p12" ]]
    then
      echo "Creating keystore"
      keytool -genkey -noprompt -alias nifi-keystore \
      -dname "CN=$(POD_NAME).nifi.$(POD_NAMESPACE).svc.cluster.local,OU=${ORGANISATION_UNIT},O=${ORGANISATION},L=${CITY},S=${STATE},C=${COUNTRY_CODE}" \
      -keystore /opt/nifi/nifi-current/keytool/keystore.p12 \
      -storepass ${KEYSTORE_PASS:-$NIFI_SENSITIVE_PROPS_KEY} \
      -KeySize 2048 \
      -keypass "${KEY_PASS:-$NIFI_SENSITIVE_PROPS_KEY}" \
      -keyalg RSA \
      -storetype pkcs12
    fi

    if [[ ! -f "/opt/nifi/nifi-current/keytool/truststore.jks" ]]
    then
      echo "Creating truststore"
      keytool -genkey -noprompt -alias nifi-truststore \
      -dname "CN=$(POD_NAME).nifi.$(POD_NAMESPACE).svc.cluster.local,OU=${ORGANISATION_UNIT},O=${ORGANISATION},L=${CITY},S=${STATE},C=${COUNTRY_CODE}" \
      -keystore /opt/nifi/nifi-current/keytool/truststore.jks \
      -storetype jks \
      -keypass ${KEYSTORE_PASS:-$NIFI_SENSITIVE_PROPS_KEY} \
      -storepass ${KEY_PASS:-$NIFI_SENSITIVE_PROPS_KEY} \
      -keyalg RSA \
      -KeySize 2048
    fi

    #/usr/bin/bash /opt/nifi/nifi-current/../scripts/secure.sh 
    #eval /opt/nifi/nifi-current/../scripts/secure.sh 
